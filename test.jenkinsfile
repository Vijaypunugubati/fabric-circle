def path  = "gopath/src/github.com/vijaypunugubati/fabric"

pipeline {
    agent any
      tools {
        go 'go-1.11.5'
      }
      options 
      {
      //To Ristrict the number of builds to be visible on jenkins
      // we don't fill up our storage!
      buildDiscarder(logRotator(numToKeepStr:'15', artifactNumToKeepStr: '15'))
      //To Timeout
      timeout(time: 10, unit: 'MINUTES')            
      }
      
      environment {
        ARCH="amd64"
        //GO111MODULE = 'on'
        GOVER = "go-1.11.5"
        GOPATH = "$WORK_SPACE/path"
        GOROOT = "/opt/go/go" + "GO_VER" + ".linux." + "$MARCH"
        PATH = "$GOPATH/bin:$GOROOT/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:${GOVER}/bin:$PATH"
      }
      
      stages
      {
        stage ('Checkout') {
            steps {checkout scm }
        }
        stage ('Run Test Cases on develop') {
        // condition should pass then only next step would run else it will skip but won't fail.
            when { branch 'develop'}            
                steps { dir(path)
                    sh label: 'Running Fabric Unit Tests', script: 'make unit-test'
                    sh label: 'Running Fabric Integration Tests', script: 'make integration-test'
                    sh label: 'Promote to QA', script: "git checkout QA; git merge origin/develop; git push origin QA;"
                }
        }        
        stage ('Run Test Cases on QA') {
        // condition should pass then only next step would run else it will skip but won't fail.          
            when { branch 'QA'}            
                steps { dir('path')
                    sh label: 'Running Fabric Unit Tests', script: 'make unit-test'
                    sh label: 'Running Fabric Integration Tests', script: 'make integration-test'
                    sh label: 'Promote to master', script: "git checkout master; git merge origin/QA; git push origin master;"
                }
        }
        stage ('Run Test Cases on master') {
        // condition should pass then only next step would run else it will skip but won't fail.            
            when { branch 'master'}            
                steps { dir('path')
                    sh label: 'Running Fabric Unit Tests', script: 'make unit-test'
                    sh label: 'Running Fabric Integration Tests', script: 'make integration-test'        
                }
        }
        stage('Archive') {     
      steps {
        echo "Archive Logs"
      }
      post {
        success {
          echo "Success"
        }
        always {
            // Archiving the .log files and ignore if empty
          archiveArtifacts artifacts: '**/*.log', allowEmptyArchive: true
        }
		} //post
      } // stages
    }  
} // pipeline
