pipeline {
    agent any
	
	triggers {
     githubPullRequests events: [Open()], spec: '* * * * *', triggerMode: 'CRON'
      }

     //tools to auto-install and put on the PATH
     //some of the supported tools - go, nodejs
  
      tools {
        go '1.11.5'
        nodejs 'nodejs-8.11.3'
      }
	  
      options 
      {
	  
      //To Ristrict the number of builds to be visible on jenkins
      // we don't fill up our storage!
      buildDiscarder(logRotator(numToKeepStr:'15', artifactNumToKeepStr: '15'))
	  
      //To Timeout
      timeout(time: 10, unit: 'MINUTES')            
      }
      stages
      {
      stage ('Checkout') 
      {
      steps {checkout scm }
      }
      stage ('Run Test Cases')
      {
      // condition should pass then only next step would run else it will skip but won't fail.
      when  { branch 'development'}            
      steps { sh label: 'Running Fabric Unit Tests', script: 'print Hello From jenkins'} 
      stage('PR state Update')
      steps{
      githubPRStatusPublisher buildMessage: message(failureMsg: githubPRMessage('Can\'t set status; build failed.'), successMsg: githubPRMessage('Can\'t set status; build succeeded.')), errorHandler: statusOnPublisherError('UNSTABLE'), statusMsg: githubPRMessage('${GITHUB_PR_COND_REF} run ended'), unstableAs: 'FAILURE'
      }
      }
      }
      }
